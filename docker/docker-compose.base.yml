# Base configuration shared across all environments
services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - graph-weaver_network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:4-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    networks:
      - graph-weaver_network
    restart: unless-stopped

  gateway:
    build:
      context: ../Gateway
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
    ports:
      - "${GATEWAY_PORT}:8080"
    networks:
      - graph-weaver_network
    restart: unless-stopped

  fetcher:
    build:
      context: ../Fetcher
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
      - GATEWAY_URL=http://gateway:8080
    networks:
      - graph-weaver_network
    restart: unless-stopped

networks:
  graph-weaver_network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data: 