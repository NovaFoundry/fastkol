services:
  # postgres:
  #   image: postgres:17
  #   container_name: postgres
  #   ports:
  #     - "${DB_PORT}:5432"
  #   environment:
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./postgres_init:/docker-entrypoint-initdb.d
  #   networks:
  #     - fastkol_network
  #   restart: unless-stopped

  # redis:
  #   image: redis:7.0-alpine # 使用官方 Alpine 版本（轻量级）
  #   container_name: redis
  #   ports:
  #     - "${REDIS_PORT}:6379" # 默认 Redis 端口映射
  #   volumes:
  #     - redis_data:/data # 持久化数据存储
  #   networks:
  #     - fastkol_network
  #   restart: unless-stopped

  # consul:
  #   image: consul:1.15
  #   container_name: consul
  #   ports:
  #     - "${CONSUL_HTTP_PORT}:8500" # Consul Web UI 和 HTTP API
  #     - "${CONSUL_DNS_PORT}:8600/udp" # Consul DNS
  #   volumes:
  #     - consul_data:/consul/data
  #     - ./consul/policy:/consul/policy
  #     - ./consul/create-consul-tokens.sh:/consul/create-consul-tokens.sh
  #   environment:
  #     - CONSUL_BIND_INTERFACE=eth0
  #     - CONSUL_LOCAL_CONFIG={"acl":{"enabled":true,"default_policy":"allow","down_policy":"extend-cache","tokens":{"master":"${CONSUL_MASTER_TOKEN}"}}}
  #   command: agent -server -bootstrap-expect=1 -bootstrap -ui -client=0.0.0.0
  #   networks:
  #     - fastkol_network
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.consul.rule=Host(`${CONSUL_HOST}`)"
  #     - "traefik.http.routers.consul.entrypoints=web"
  #     - "traefik.http.routers.consul.entrypoints=websecure"
  #     - "traefik.http.routers.consul.tls.certresolver=cloudflare"
  #     - "traefik.http.services.consul.loadbalancer.server.port=${CONSUL_HTTP_PORT}"
  #     - "traefik.http.routers.consul.middlewares=consul-auth"
  #     - "traefik.http.middlewares.consul-auth.basicauth.users=${CONSUL_TRAEFIK_USER_PWD}"

  # traefik:
  #   image: traefik:latest
  #   container_name: traefik
  #   command:
  #     - --api.insecure=true
  #     - --api.dashboard=true
  #     - --providers.docker=true
  #     - --providers.docker.exposedbydefault=false
  #     - --entrypoints.web.address=:80
  #     - --entrypoints.websecure.address=:443
  #     - --providers.consulcatalog=true
  #     - --providers.consulcatalog.endpoint.address=consul:${CONSUL_HTTP_PORT}
  #     - --providers.consulcatalog.endpoint.token=${CONSUL_SERVICE_REGISTRATION_TOKEN}
  #     - --providers.consulcatalog.exposedbydefault=false
  #     - --accesslog=true
  #     # ACME 配置
  #     - --certificatesresolvers.cloudflare.acme.dnschallenge=true
  #     - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
  #     - --certificatesresolvers.cloudflare.acme.email=${TRAEFIK_EMAIL}
  #     - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
  #     - --certificatesresolvers.cloudflare.acme.dnschallenge.delaybeforecheck=0
  #   ports:
  #     - "${TRAEFIK_HTTP_PORT}:80" # HTTP
  #     - "${TRAEFIK_HTTPS_PORT}:443" # HTTPS
  #     - "${TRAEFIK_DASHBOARD_PORT}:8080" # Traefik Dashboard
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - traefik_data:/data
  #     - ./traefik/letsencrypt:/letsencrypt
  #   environment:
  #     - CF_DNS_API_TOKEN=${TRAEFIK_CF_DNS_API_TOKEN}
  #   networks:
  #     - fastkol_network
  #   restart: unless-stopped
  #   depends_on:
  #     - consul

  demo:
    image: hujia7812556/fastkol-demo:latest
    container_name: demo
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.demo.rule=Host(`${DEMO_HOST}`)"
      - "traefik.http.routers.demo.entrypoints=web"
      - "traefik.http.routers.demo.entrypoints=websecure"
      - "traefik.http.routers.demo.tls.certresolver=cloudflare"
      - "traefik.http.services.demo.loadbalancer.server.port=3000"
      - "traefik.http.routers.demo.middlewares=demo-auth"
      - "traefik.http.middlewares.demo-auth.basicauth.users=${DEMO_TRAEFIK_USER_PWD}"
    networks:
      - fastkol_network
      - common_network
    restart: unless-stopped

  admin:
    image: hujia7812556/fastkol-admin:latest
    container_name: admin
    volumes:
      - ./admin/config.yaml:/app/configs/config.yaml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`${FASTKOL_API_HOST}`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.admin.entrypoints=web"
      - "traefik.http.routers.admin.entrypoints=websecure"
      - "traefik.http.routers.admin.tls.certresolver=cloudflare"
      - "traefik.http.services.admin.loadbalancer.server.port=8000"
      - "traefik.http.routers.admin.middlewares=admin-stripprefix"
      - "traefik.http.middlewares.admin-stripprefix.stripprefix.prefixes=/admin"
    networks:
      - fastkol_network
      - common_network
    restart: unless-stopped

  admin-ui:
    image: hujia7812556/fastkol-admin-ui:latest
    container_name: admin-ui
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin-ui.rule=Host(`${ADMIN_UI_HOST}`)"
      - "traefik.http.routers.admin-ui.entrypoints=web"
      - "traefik.http.routers.admin-ui.entrypoints=websecure"
      - "traefik.http.routers.admin-ui.tls.certresolver=cloudflare"
      - "traefik.http.services.admin-ui.loadbalancer.server.port=3000"
      - "traefik.http.routers.admin-ui.middlewares=admin-ui-auth"
      - "traefik.http.middlewares.admin-ui-auth.basicauth.users=${ADMIN_UI_TRAEFIK_USER_PWD}"
    networks:
      - fastkol_network
      - common_network
    restart: unless-stopped
    depends_on:
      - admin

  fetcher-web:
    image: hujia7812556/fastkol-fetcher:latest
    container_name: fetcher-web
    volumes:
      - ./fetcher-web/config.yaml:/app/config/config.yaml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fetcher.rule=Host(`${FASTKOL_API_HOST}`) && PathPrefix(`/fetcher`)"
      - "traefik.http.routers.fetcher.entrypoints=web"
      - "traefik.http.routers.fetcher.entrypoints=websecure"
      - "traefik.http.routers.fetcher.tls.certresolver=cloudflare"
      - "traefik.http.services.fetcher.loadbalancer.server.port=8000"
      - "traefik.http.routers.fetcher.middlewares=fetcher-stripprefix"
      - "traefik.http.middlewares.fetcher-stripprefix.stripprefix.prefixes=/fetcher"
    networks:
      - fastkol_network
      - common_network
    restart: unless-stopped
    depends_on:
      - fetcher-worker

  fetcher-worker:
    image: hujia7812556/fastkol-fetcher:latest
    container_name: fetcher-worker
    volumes:
      - ./fetcher-worker/config.yaml:/app/config/config.yaml
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
    networks:
      - fastkol_network
      - common_network
    restart: unless-stopped
    depends_on:
      - admin

networks:
  fastkol_network:
    driver: bridge
  common_network:
    external: true
