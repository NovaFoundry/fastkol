name: Deploy to Production

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate .env files from secrets
        env:
          DOCKER_COMPOSE_ENV: ${{ secrets.DOCKER_COMPOSE_ENV }}
          DEMO_ENV: ${{ secrets.DEMO_ENV }}
          ADMIN_CONFIG: ${{ secrets.ADMIN_CONFIG }}
          FETCHER_CONFIG: ${{ secrets.FETCHER_CONFIG }}
        run: |
          # 这样可以正确输出里面的$符号
          cat > docker/environments/prod/.env <<EOF
          $DOCKER_COMPOSE_ENV
          EOF

          mkdir -p docker/environments/prod/demo
          cat > docker/environments/prod/demo/.env <<EOF
          $DEMO_ENV
          EOF

          mkdir -p docker/environments/prod/admin
          cat > docker/environments/prod/admin/config.yaml <<EOF
          $ADMIN_CONFIG
          EOF

          mkdir -p docker/environments/prod/fetcher-web
          cat > docker/environments/prod/fetcher-web/config.yaml <<EOF
          $FETCHER_CONFIG
          EOF

          mkdir -p docker/environments/prod/fetcher-worker
          cat > docker/environments/prod/fetcher-worker/config.yaml <<EOF
          $FETCHER_CONFIG
          EOF

      - name: Create target directory on remote server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            mkdir -p ${{ secrets.DEPLOY_TARGET }}

      - name: Sync prod directory to target server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "docker/environments/prod/*,docker/environments/prod/.env,docker/environments/prod/demo/.env"
          target: "${{ secrets.DEPLOY_TARGET }}"
          strip_components: 3

      - name: Ensure acme.json exists on target server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_TARGET }}
            mkdir -p traefik/letsencrypt
            if [ ! -f traefik/letsencrypt/acme.json ]; then
              touch traefik/letsencrypt/acme.json
              chmod 600 traefik/letsencrypt/acme.json
            fi

      - name: Deploy on target server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_TARGET }}
            docker compose pull
            docker compose up -d --force-recreate