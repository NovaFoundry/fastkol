syntax = "proto3";

package twitter.v1;

import "google/api/annotations.proto";

option go_package = "Admin/api/twitter/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.twitter.v1";
option java_outer_classname = "TwitterProtoV1";

// TwitterAccount服务定义
service TwitterAccount {
  // 创建Twitter账号
  rpc CreateTwitterAccount (CreateTwitterAccountRequest) returns (CreateTwitterAccountReply) {
    option (google.api.http) = {
      post: "/v1/twitter/accounts"
      body: "*"
    };
  }
  
  // 更新Twitter账号
  rpc UpdateTwitterAccount (UpdateTwitterAccountRequest) returns (UpdateTwitterAccountReply) {
    option (google.api.http) = {
      put: "/v1/twitter/accounts/{id}"
      body: "*"
    };
  }
  
  // 删除Twitter账号
  rpc DeleteTwitterAccount (DeleteTwitterAccountRequest) returns (DeleteTwitterAccountReply) {
    option (google.api.http) = {
      delete: "/v1/twitter/accounts/{id}"
    };
  }
  
  // 获取Twitter账号
  rpc GetTwitterAccount (GetTwitterAccountRequest) returns (GetTwitterAccountReply) {
    option (google.api.http) = {
      get: "/v1/twitter/accounts/{id}"
    };
  }
  
  // 列出所有Twitter账号
  rpc ListTwitterAccounts (ListTwitterAccountsRequest) returns (ListTwitterAccountsReply) {
    option (google.api.http) = {
      get: "/v1/twitter/accounts"
    };
  }

  // 获取并锁定Twitter账号
  rpc LockTwitterAccounts (LockTwitterAccountsRequest) returns (LockTwitterAccountsReply) {
    option (google.api.http) = {
      post: "/v1/twitter/accounts/lock"
      body: "*"
    };
  }

  // 解锁Twitter账号
  rpc UnlockTwitterAccounts (UnlockTwitterAccountsRequest) returns (UnlockTwitterAccountsReply) {
    option (google.api.http) = {
      post: "/v1/twitter/accounts/unlock"
      body: "*"
    };
  }
}

// Headers消息定义
message Headers {
  string authorization = 1 [json_name = "authorization"];
  string x_csrf_token = 2 [json_name = "x-csrf-token"];
  string cookie = 3 [json_name = "cookie"];
}

// 创建Twitter账号请求
message CreateTwitterAccountRequest {
  string username = 1;
  string email = 2;
  string phone = 3;
  string password = 4;
  Headers headers = 5;
  string status = 6;
}

// 创建Twitter账号响应
message CreateTwitterAccountReply {
  TwitterAccountInfo account = 1;
}

// 更新Twitter账号请求
message UpdateTwitterAccountRequest {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string phone = 4;
  string password = 5;
  Headers headers = 6;
  string status = 7;
}

// 更新Twitter账号响应
message UpdateTwitterAccountReply {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string phone = 4;
  Headers headers = 5;
  string status = 6;
  string updated_at = 7;
}

// 删除Twitter账号请求
message DeleteTwitterAccountRequest {
  int64 id = 1;
}

// 删除Twitter账号响应
message DeleteTwitterAccountReply {
  bool success = 1;
}

// 获取Twitter账号请求
message GetTwitterAccountRequest {
  int64 id = 1;
}

// 获取Twitter账号响应
message GetTwitterAccountReply {
  TwitterAccountInfo account = 1;
}

// 列出所有Twitter账号请求
message ListTwitterAccountsRequest {
  int32 page_size = 1; // 每页数量，默认20
  int32 page_num = 2; // 页码，默认1
  string status = 3; // 状态，默认normal
}

// 列出所有Twitter账号响应
message ListTwitterAccountsReply {
  repeated TwitterAccountInfo accounts = 1;
  int32 total = 2;
}

// 获取并锁定Twitter账号请求
message LockTwitterAccountsRequest {
  int32 count = 1; // 需要获取的账号数量，默认1
  int32 lock_seconds = 2; // 锁定时间，单位秒，默认60秒
  string type = 3; // 锁定类型：similar或search
}

// 获取并锁定Twitter账号响应
message LockTwitterAccountsReply {
  repeated TwitterAccountInfo accounts = 1;
  int32 lock_seconds = 2; // 实际锁定的时间
}

// 解锁Twitter账号请求
message UnlockTwitterAccountsRequest {
  repeated int64 ids = 1; // 要解锁的账号ID列表
  int32 delay = 2; // 延迟释放时间，单位秒，不设置或0表示立即释放
}

// 解锁Twitter账号响应
message UnlockTwitterAccountsReply {
  bool success = 1;
  int32 unlocked_count = 2; // 成功解锁的账号数量
}

// Twitter账号信息
message TwitterAccountInfo {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string phone = 4;
  string password = 5;
  Headers headers = 6;
  string status = 7;
  string created_at = 8;
  string updated_at = 9;
} 